<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡§õ‡§µ‡§ø ‡§∏‡•á PNG ‡§ï‡§®‡•ç‡§µ‡§∞‡•ç‡§ü‡§∞ - MultiTools</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="../assets/css/style.css" rel="stylesheet">
    <meta name="description" content="‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§õ‡§µ‡§ø ‡§ï‡•ã PNG ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡§®‡•ç‡§µ‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§ JPG, WEBP, GIF ‡§∏‡•á PNG ‡§Æ‡•á‡§Ç ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§¨‡§¶‡§≤‡•á‡§Ç‡•§">
</head>
<body>
    <div id="header-container"></div>

    <main class="container my-5">
        <div class="row">
            <div class="col-md-8">
                <h2 class="mb-4">‡§õ‡§µ‡§ø ‡§∏‡•á PNG ‡§ï‡§®‡•ç‡§µ‡§∞‡•ç‡§ü‡§∞</h2>
                
                <div class="card shadow">
                    <div class="card-body">
                        <div id="dropZone" class="drop-zone">
                            <input type="file" id="imageInput" accept="image/*" class="d-none">
                            <label for="imageInput" class="btn btn-primary mb-3">
                                üìÅ ‡§õ‡§µ‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç
                            </label>
                            <p class="text-muted">‡§Ø‡§æ ‡§õ‡§µ‡§ø ‡§ï‡•ã ‡§Ø‡§π‡§æ‡§Å ‡§ñ‡•Ä‡§Ç‡§ö‡•á‡§Ç</p>
                            <img id="preview" class="img-fluid mt-3 d-none">
                        </div>
                        
                        <div class="convert-options mt-4">
                            <button onclick="convertToPNG()" class="btn btn-success">
                                PNG ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡•á‡§Ç
                            </button>
                            <a id="downloadLink" class="btn btn-secondary d-none">
                                ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
                            </a>
                        </div>
                        
                        <div id="errorAlert" class="alert alert-danger mt-3 d-none"></div>
                    </div>
                </div>
                
                <div class="mt-4">
                    <h4>‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂:</h4>
                    <ol>
                        <li>‡§õ‡§µ‡§ø ‡§´‡§º‡§æ‡§á‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç ‡§Ø‡§æ ‡§ñ‡•Ä‡§Ç‡§ö‡§ï‡§∞ ‡§õ‡•ã‡§°‡§º‡•á‡§Ç</li>
                        <li>‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§® ‡§ï‡•Ä ‡§ú‡§æ‡§Å‡§ö ‡§ï‡§∞‡•á‡§Ç</li>
                        <li>"PNG ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡•á‡§Ç" ‡§¨‡§ü‡§® ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç</li>
                        <li>‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§ø‡§§ ‡§´‡§º‡§æ‡§á‡§≤ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç</li>
                    </ol>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="ad-sidebar bg-light p-3 rounded">
                    <h5>‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§™‡§®</h5>
                    <div class="ad-content">‡§Ø‡§π‡§æ‡§Å ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§™‡§® ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§ó‡§æ</div>
                </div>
            </div>
        </div>
    </main>

    <div id="footer-container"></div>

    <script src="../assets/js/main.js"></script>
    <script>
        // Drag and Drop Functionality
        const dropZone = document.getElementById('dropZone');
        const imageInput = document.getElementById('imageInput');

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('dragging');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('dragging');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('dragging');
            const file = e.dataTransfer.files[0];
            handleImage(file);
        });

        imageInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            handleImage(file);
        });

        function handleImage(file) {
            if (!file.type.startsWith('image/')) {
                showError('‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•á‡§µ‡§≤ ‡§õ‡§µ‡§ø ‡§´‡§º‡§æ‡§á‡§≤‡•á‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç');
                return;
            }

            const reader = new FileReader();
            reader.onload = (e) => {
                const preview = document.getElementById('preview');
                preview.src = e.target.result;
                preview.classList.remove('d-none');
            };
            reader.readAsDataURL(file);
        }

        // Conversion Logic
        function convertToPNG() {
            const preview = document.getElementById('preview');
            if (!preview.src) {
                showError('‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§õ‡§µ‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç');
                return;
            }

            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            canvas.width = preview.naturalWidth;
            canvas.height = preview.naturalHeight;
            ctx.drawImage(preview, 0, 0);

            canvas.toBlob((blob) => {
                const url = URL.createObjectURL(blob);
                const downloadLink = document.getElementById('downloadLink');
                downloadLink.href = url;
                downloadLink.download = `converted-${Date.now()}.png`;
                downloadLink.classList.remove('d-none');
            }, 'image/png');
        }

        function showError(message) {
            const errorAlert = document.getElementById('errorAlert');
            errorAlert.textContent = message;
            errorAlert.classList.remove('d-none');
            setTimeout(() => errorAlert.classList.add('d-none'), 5000);
        }
    </script>
</body>
</html>

